FIND_PATH(POCO_INCLUDE_DIR
Poco/Poco.h
PATHS ${CMAKE_INCLUDE_PATH}
)
if(POCO_INCLUDE_DIR)
message(STATUS "Poco headers found in " ${POCO_INCLUDE_DIR})
else(POCO_INCLUDE_DIR)
message(SEND_ERROR "Poco headers not found")
endif(POCO_INCLUDE_DIR)

FIND_LIBRARY(LIB_POCO_FOUNDATION
NAME PocoFoundation
PATHS ${CMAKE_LIBRARY_PATH}
)

FIND_LIBRARY(LIB_POCO_UTIL
NAME PocoUtil
PATHS ${CMAKE_LIBRARY_PATH}
)

FIND_LIBRARY(LIB_POCO_NET
NAME PocoNet
PATHS ${CMAKE_LIBRARY_PATH}
)

FIND_LIBRARY(LIB_POCO_XML
NAME PocoXML
PATHS ${CMAKE_LIBRARY_PATH}
)

if(LIB_POCO_FOUNDATION AND LIB_POCO_UTIL AND LIB_POCO_NET AND LIB_POCO_XML)
message(STATUS "Poco libraries found: " ${LIB_POCO_FOUNDATION} ", " ${LIB_POCO_UTIL} ", " ${LIB_POCO_NET} ", " ${LIB_POCO_XML})
else(LIB_POCO_FOUNDATION AND LIB_POCO_UTIL AND LIB_POCO_NET AND LIB_POCO_XML)
message(SEND_ERROR "Poco libraries not found")
endif(LIB_POCO_FOUNDATION AND LIB_POCO_UTIL AND LIB_POCO_NET AND LIB_POCO_XML)

if(POCO_INCLUDE_DIR AND LIB_POCO_FOUNDATION AND LIB_POCO_UTIL AND LIB_POCO_NET AND LIB_POCO_XML)

INCLUDE_DIRECTORIES(
${POCO_INCLUDE_DIR}
${ommlib_SOURCE_DIR}/Omm
)

ADD_LIBRARY(ommutil
SHARED
Util.cpp
)

TARGET_LINK_LIBRARIES( ommutil
${LIB_POCO_FOUNDATION}
)

if(LINUX)
ADD_SUBDIRECTORY(SysLinux)
if(TARGET ommsys-linux)
SET(LIB_OMMSYS_PLATFORM ommsys-linux)
endif(TARGET ommsys-linux)
elseif(DARWIN)
ADD_SUBDIRECTORY(SysDarwin)
if(TARGET ommsys-darwin)
SET(LIB_OMMSYS_PLATFORM ommsys-darwin)
endif(TARGET ommsys-darwin)
endif(LINUX)

if(LIB_OMMSYS_PLATFORM)
message(STATUS "system specific implementation for " ${BUILD_TARGET} " is available, linking libommsys with " ${LIB_OMMSYS_PLATFORM})
else(LIB_OMMSYS_PLATFORM)
message(STATUS "system specific implementation for " ${BUILD_TARGET} " not available, using standard implementation")
ADD_DEFINITIONS(
-D__SYS_STANDARD_PLATFORM__
)
endif(LIB_OMMSYS_PLATFORM)

ADD_LIBRARY( ommsys
SHARED
Sys.cpp
)

TARGET_LINK_LIBRARIES( ommsys
${LIB_POCO_FOUNDATION}
${LIB_POCO_NET}
${LIB_OMMSYS_PLATFORM}
)

ADD_LIBRARY(omm
SHARED
Upnp.cpp
)

TARGET_LINK_LIBRARIES( omm
${LIB_POCO_FOUNDATION}
${LIB_POCO_NET}
${LIB_POCO_XML}
ommsys
)

ADD_LIBRARY(ommav
SHARED
UpnpAvController.cpp
UpnpAvControllers.cpp
UpnpAvDevices.cpp
UpnpAvTypes.cpp
UpnpAvServer.cpp
UpnpAvServerImpl.cpp
UpnpAvRenderer.cpp
UpnpAvRendererImpl.cpp
UpnpAvCtrlImpl.cpp
)

TARGET_LINK_LIBRARIES( ommav
omm
)

ADD_LIBRARY( ommavstream
SHARED
AvStream.cpp
)

TARGET_LINK_LIBRARIES( ommavstream
${LIB_POCO_FOUNDATION}
)

INSTALL( TARGETS ommutil ommsys omm ommav ommavstream
LIBRARY DESTINATION lib
ARCHIVE DESTINATION lib
)

INSTALL( DIRECTORY ${ommlib_SOURCE_DIR}/Omm
DESTINATION include
FILES_MATCHING PATTERN "*.h"
)

ADD_SUBDIRECTORY(FFmpeg)
ADD_SUBDIRECTORY(Dvb)

elseif(POCO_INCLUDE_DIR AND LIB_POCO_FOUNDATION AND LIB_POCO_UTIL AND LIB_POCO_NET AND LIB_POCO_XML)
message(SEND_ERROR "Poco libraries not found, cannot build project.")
endif(POCO_INCLUDE_DIR AND LIB_POCO_FOUNDATION AND LIB_POCO_UTIL AND LIB_POCO_NET AND LIB_POCO_XML)
