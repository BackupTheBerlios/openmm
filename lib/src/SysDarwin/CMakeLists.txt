FIND_PATH(SYSCONF_INCLUDE_DIR
SCDynamicStore.h
PATHS ${CMAKE_FRAMEWORK_PATH}
)

FIND_LIBRARY(SYSCONF_DIR
NAME SystemConfiguration
PATHS ${CMAKE_FRAMEWORK_PATH}
)

FIND_PATH(COREFOUNDATION_INCLUDE_DIR
CoreFoundation.h
PATHS ${CMAKE_FRAMEWORK_PATH}
)

FIND_LIBRARY(COREFOUNDATION_DIR
NAME CoreFoundation
PATHS ${CMAKE_FRAMEWORK_PATH}
)

FIND_PATH(POCO_INCLUDE_DIR
Poco/Poco.h
PATHS ${CMAKE_INCLUDE_PATH}
)

FIND_LIBRARY(LIB_POCO_FOUNDATION
NAME PocoFoundation
PATHS ${CMAKE_LIBRARY_PATH}
)

if(SYSCONF_INCLUDE_DIR AND SYSCONF_DIR AND POCO_INCLUDE_DIR AND LIB_POCO_FOUNDATION)
message(STATUS "system configuration framwork found in " ${SYSCONF_INCLUDE_DIR} " " ${SYSCONF_DIR})
message(STATUS "Poco headers found in " ${POCO_INCLUDE_DIR})

INCLUDE_DIRECTORIES(
${SYSCONF_INCLUDE_DIR}
${COREFOUNDATION_INCLUDE_DIR}
${POCO_INCLUDE_DIR}
${ommlib_SOURCE_DIR}/Omm
)

ADD_LIBRARY( ommsys-darwin
    STATIC
    #SHARED
    SysImplDarwin.cpp
    #NetworkDevice.cpp
)

TARGET_LINK_LIBRARIES( ommsys-darwin
    ${LIB_POCO_FOUNDATION}
    ${SYSCONF_DIR}
    ${COREFOUNDATION_DIR}
    #ommsys
)

INSTALL( TARGETS ommsys-darwin
LIBRARY DESTINATION lib
ARCHIVE DESTINATION lib
)

else(SYSCONF_INCLUDE_DIR AND SYSCONF_DIR AND POCO_INCLUDE_DIR AND LIB_POCO_FOUNDATION)
if(NOT (SYSCONF_INCLUDE_DIR AND SYSCONF_DIR))
message(STATUS "system configuration framework not found")
endif(NOT (SYSCONF_INCLUDE_DIR AND SYSCONF_DIR))
if(NOT (POCO_INCLUDE_DIR AND LIB_POCO_FOUNDATION))
message(STATUS "Poco not found")
endif(NOT (POCO_INCLUDE_DIR AND LIB_POCO_FOUNDATION))
endif(SYSCONF_INCLUDE_DIR AND SYSCONF_DIR AND POCO_INCLUDE_DIR AND LIB_POCO_FOUNDATION)
