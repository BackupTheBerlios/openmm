/***************************************************************************|
|                               WARNING                                     |
|        This file is generated by the jamm stub generator jammgen.         |
|                   RENAME THIS FILE BEFORE EDITING!                        |
|           It will be overriden at the next run of jammgen.                |
***************************************************************************/

#include "MediaServerCtrlImpl.h"

void
AVTransportControllerImpl::_ansSetAVTransportURI(const Jamm::ui4& InstanceID, const std::string& CurrentURI, const std::string& CurrentURIMetaData)
{
// begin of your own code

// end of your own code
}


void
AVTransportControllerImpl::_ansGetMediaInfo(const Jamm::ui4& InstanceID, const Jamm::ui4& NrTracks, const std::string& MediaDuration, const std::string& CurrentURI, const std::string& CurrentURIMetaData, const std::string& NextURI, const std::string& NextURIMetaData, const std::string& PlayMedium, const std::string& RecordMedium, const std::string& WriteStatus)
{
// begin of your own code

// end of your own code
}


void
AVTransportControllerImpl::_ansGetTransportInfo(const Jamm::ui4& InstanceID, const std::string& CurrentTransportState, const std::string& CurrentTransportStatus, const std::string& CurrentSpeed)
{
// begin of your own code

// end of your own code
}


void
AVTransportControllerImpl::_ansGetPositionInfo(const Jamm::ui4& InstanceID, const Jamm::ui4& Track, const std::string& TrackDuration, const std::string& TrackMetaData, const std::string& TrackURI, const std::string& RelTime, const std::string& AbsTime, const Jamm::i4& RelCount, const Jamm::i4& AbsCount)
{
// begin of your own code

// end of your own code
}


void
AVTransportControllerImpl::_ansGetDeviceCapabilities(const Jamm::ui4& InstanceID, const std::string& PlayMedia, const std::string& RecMedia, const std::string& RecQualityModes)
{
// begin of your own code

// end of your own code
}


void
AVTransportControllerImpl::_ansGetTransportSettings(const Jamm::ui4& InstanceID, const std::string& PlayMode, const std::string& RecQualityMode)
{
// begin of your own code

// end of your own code
}


void
AVTransportControllerImpl::_ansStop(const Jamm::ui4& InstanceID)
{
// begin of your own code

// end of your own code
}


void
AVTransportControllerImpl::_ansPlay(const Jamm::ui4& InstanceID, const std::string& Speed)
{
// begin of your own code

// end of your own code
}


void
AVTransportControllerImpl::_ansPause(const Jamm::ui4& InstanceID)
{
// begin of your own code

// end of your own code
}


void
AVTransportControllerImpl::_ansSeek(const Jamm::ui4& InstanceID, const std::string& Unit, const std::string& Target)
{
// begin of your own code

// end of your own code
}


void
AVTransportControllerImpl::_ansNext(const Jamm::ui4& InstanceID)
{
// begin of your own code

// end of your own code
}


void
AVTransportControllerImpl::_ansPrevious(const Jamm::ui4& InstanceID)
{
// begin of your own code

// end of your own code
}


void
AVTransportControllerImpl::_changedLastChange(const std::string& val)
{
// begin of your own code

// end of your own code
}


void
ConnectionManagerControllerImpl::_ansGetProtocolInfo(const std::string& Source, const std::string& Sink)
{
// begin of your own code

// end of your own code
}


void
ConnectionManagerControllerImpl::_ansConnectionComplete(const Jamm::i4& ConnectionID)
{
// begin of your own code

// end of your own code
}


void
ConnectionManagerControllerImpl::_ansGetCurrentConnectionIDs(const std::string& ConnectionIDs)
{
// begin of your own code

// end of your own code
}


void
ConnectionManagerControllerImpl::_ansGetCurrentConnectionInfo(const Jamm::i4& ConnectionID, const Jamm::i4& RcsID, const Jamm::i4& AVTransportID, const std::string& ProtocolInfo, const std::string& PeerConnectionManager, const Jamm::i4& PeerConnectionID, const std::string& Direction, const std::string& Status)
{
// begin of your own code

// end of your own code
}


void
ConnectionManagerControllerImpl::_changedSourceProtocolInfo(const std::string& val)
{
// begin of your own code

// end of your own code
}


void
ConnectionManagerControllerImpl::_changedSinkProtocolInfo(const std::string& val)
{
// begin of your own code

// end of your own code
}


void
ConnectionManagerControllerImpl::_changedCurrentConnectionIDs(const std::string& val)
{
// begin of your own code

// end of your own code
}


void
ContentDirectoryControllerImpl::_ansGetSearchCapabilities(const std::string& SearchCaps)
{
// begin of your own code

// end of your own code
}


void
ContentDirectoryControllerImpl::_ansGetSortCapabilities(const std::string& SortCaps)
{
// begin of your own code

// end of your own code
}


void
ContentDirectoryControllerImpl::_ansGetSystemUpdateID(const Jamm::ui4& Id)
{
// begin of your own code

// end of your own code
}


void
ContentDirectoryControllerImpl::_ansBrowse(const std::string& ObjectID, const std::string& BrowseFlag, const std::string& Filter, const Jamm::ui4& StartingIndex, const Jamm::ui4& RequestedCount, const std::string& SortCriteria, const std::string& Result, const Jamm::ui4& NumberReturned, const Jamm::ui4& TotalMatches, const Jamm::ui4& UpdateID)
{
// begin of your own code

// end of your own code
}


void
ContentDirectoryControllerImpl::_ansSearch(const std::string& ContainerID, const std::string& SearchCriteria, const std::string& Filter, const Jamm::ui4& StartingIndex, const Jamm::ui4& RequestedCount, const std::string& SortCriteria, const std::string& Result, const Jamm::ui4& NumberReturned, const Jamm::ui4& TotalMatches, const Jamm::ui4& UpdateID)
{
// begin of your own code

// end of your own code
}


void
ContentDirectoryControllerImpl::_ansCreateObject(const std::string& ContainerID, const std::string& Elements, const std::string& ObjectID, const std::string& Result)
{
// begin of your own code

// end of your own code
}


void
ContentDirectoryControllerImpl::_ansDestroyObject(const std::string& ObjectID)
{
// begin of your own code

// end of your own code
}


void
ContentDirectoryControllerImpl::_ansUpdateObject(const std::string& ObjectID, const std::string& CurrentTagValue, const std::string& NewTagValue)
{
// begin of your own code

// end of your own code
}


void
ContentDirectoryControllerImpl::_ansImportResource(const & SourceURI, const & DestinationURI, const Jamm::ui4& TransferID)
{
// begin of your own code

// end of your own code
}


void
ContentDirectoryControllerImpl::_ansGetTransferProgress(const Jamm::ui4& TransferID, const std::string& TransferStatus, const std::string& TransferLength, const std::string& TransferTotal)
{
// begin of your own code

// end of your own code
}


void
ContentDirectoryControllerImpl::_ansDeleteResource(const & ResourceURI)
{
// begin of your own code

// end of your own code
}


void
ContentDirectoryControllerImpl::_ansCreateReference(const std::string& ContainerID, const std::string& ObjectID, const std::string& NewID)
{
// begin of your own code

// end of your own code
}


void
ContentDirectoryControllerImpl::_changedTransferIDs(const std::string& val)
{
// begin of your own code

// end of your own code
}


void
ContentDirectoryControllerImpl::_changedSystemUpdateID(const Jamm::ui4& val)
{
// begin of your own code

// end of your own code
}


void
ContentDirectoryControllerImpl::_changedContainerUpdateIDs(const std::string& val)
{
// begin of your own code

// end of your own code
}


