Contents

1. Introduction
2. Building from Source
3. Dependencies
4. Running the Applications

-------------------------------------------------------------------------------------------------------

1. Introduction (outdated, incomplete)

Omm is a set of applications and libraries for easily making your multimedia content available
to your local network. It aims to be compatible to the UPnP V1.0 and UPnP-AV V1.0 specification.

Omm currently includes the following components:

omm - the main application, providing a sensible mix of Omm components.

ommcontrol - a UPnP-AV Media Controller
ommcontrol is the "remote control" of your multimedia system.
It lets you select your media source (UPnP-AV Server), browse the content of the server, select a media object
(song, video, tv-channel, ...), select a media output (UPnP-AV Renderer) and control the transport of the media
from Server to Renderer (start, stop, seek, ...).

ommrender - a UPnP-AV Media Renderer
ommrender is the "set-top box" for you TV. It renders the media streams
coming from the UPnP-AV Server to a screen and a sound system.

ommserve - a set of UPnP-AV Media Servers
Currently only a plugin for VDR (Video Disc Recorder - http://www.cadsoft.de/vdr/) is available.
It gives you access to digital television provided by VDR (DVB-S, DVB-C or DVB-T). The plugin
exposes the TV channels, you can watch live-TV and the recordings. Seeking in recordings is
supported. For browsing the EPG or setting timers you need a web based interface like vdr-admin.
For delivering other content, such as music and video files (mp3, avi, ...) you can use one
of the UPnP-AV servers out there (see compatibility list below).

libommupnp
UPnP 1.0 implementation

libommupnpav
UPnP AV 1.0 implementation

-------------------------------------------------------------------------------------------------------

2. Building from Source

To build Omm from source you need CMake as of version 2.6 or later. In the top-level directory
just run:

$ ./make.sh config
$ ./make.sh

and you should be done.

Install the binaries directly from the build tree
$ sudo ./make.sh install

or create packages:
$ ./make.sh package

-------------------------------------------------------------------------------------------------------

3. Dependencies (somewhat outdated)

All Omm components depend on the Poco libraries (http://pocoproject.org/).
Further dependencies are:

ommcontrol: Qt 4.4.3 or later
ommrender: X with support for xvideo is currently recommended
ommrender VLC engine: libvlc (as of vlc 0.9.4 or later)
ommrender mplayer engine: mplayer at least 1.0 pre-something installed as a runtime dependency
ommrender xine engine: libxine 1.1.15 or later
ommserve-vdr: VDR 1.6.0 with streamdev-server plugin

The mplayer engine has an incredible good seek performance on http streams, but has some flaws when
it comes to controlling it via IPC.

VLC has a clean library design and an overall good performance, especially on mpeg streams via http.
That's nice for TV streaming. However, seeking and AV-Transport related control is not as fast as mplayer's.

The xine engine is imcomplete and probably not working. Seeking on http streams is not implemented in
libxine, so this should be done first do reactivate it for Omm.

So, currently I recommend the VLC engine.

-------------------------------------------------------------------------------------------------------

4. Running the Applications (outdated)

This is pretty straight forward: just run ommcontrol or ommrender on a single or on several different machines.
No configuration is needed, in the first place. All UPnP-AV Servers and UPnP-AV Renderers announce
themselves on the local network and then pop up in ommcontrol. You can quit or start a second ommcontrol while
some media is rendered, so different instances of ommcontrol can concurrently control one playing media.
On the other hand, one instance of ommcontrol can control different instances of ommrender, for example one
in the living-room and one in the kitchen. Your mileage may vary.

ommserve-vdr must be installed as a vdr-plugin, usually in /usr/lib/vdr/plugins. The streamdev-plugin must be
configured and working on the standard ports. Don't forget to add:

streamdev-server.AllowSuspend = 1
streamdev-server.SuspendMode = 1

to vdr's setup.conf, to enable changing of transponders on the stream's request.

-------------------------------------------------------------------------------------------------------

5. Compatibility (outdated)

Currently, only Mediatomb (http://mediatomb.cc) has been tested to work nicely with the Omm applications. Please give
feedback, if you have tested others.

I hope you enjoy Omm as much as I enjoy hacking on it
Joerg Bakker
