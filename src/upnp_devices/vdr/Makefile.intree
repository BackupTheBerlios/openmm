#
# Makefile for a Video Disk Recorder plugin
#
# $Id$

# The official name of this plugin.
# This name will be used in the '-P...' option of VDR to load the plugin.
# By default the main source file also carries this name.
# IPORTANT: the presence of this macro is important for the Make.config
# file. So it must be defined, even if it is not used here!
#
PLUGIN = upnp

### The version number of this plugin (taken from the main source file):

VERSION = $(shell grep 'static const char \*VERSION *=' $(PLUGIN).c | awk '{ print $$6 }' | sed -e 's/[";]//g')

### The C++ compiler and options:

CXX      ?= g++
# CXXFLAGS ?= -fPIC -g -O2 -Wall -Woverloaded-virtual
CXXFLAGS ?= -fPIC -Wall -Woverloaded-virtual

### The directory environment:

VDRDIR = ../../..
LIBDIR = ../../lib
TMPDIR = /tmp

### Allow user defined options to overwrite defaults:

-include $(VDRDIR)/Make.config

### The version number of VDR's plugin API (taken from VDR's "config.h"):

APIVERSION = $(shell sed -ne '/define APIVERSION/s/^.*"\(.*\)".*$$/\1/p' $(VDRDIR)/config.h)

### The name of the distribution archive:

ARCHIVE = $(PLUGIN)-$(VERSION)
PACKAGE = vdr-$(ARCHIVE)

### Includes and Defines (add further entries here):

INCLUDES += -I$(VDRDIR)/include
INCLUDES += -I. -Iplatin_upnp/include

DEFINES += -D_GNU_SOURCE -DPLUGIN_NAME_I18N='"$(PLUGIN)"'
#     -D_REENTRANT -DNPT_DEBUG -DNPT_CONFIG_ENABLE_LOGGING -DNPT_CONFIG_ENABLE_ZIP
DEFINES += -D_REENTRANT

### The object files (add further files here):

OBJS = $(PLUGIN).o

PLATIN_UPNP_OBJS = \
    platin_upnp/Neptune.o \
    platin_upnp/NptBase64.o \
    platin_upnp/NptBufferedStreams.o \
    platin_upnp/NptCommon.o \
    platin_upnp/NptConsole.o \
    platin_upnp/NptDataBuffer.o \
    platin_upnp/NptDebug.o \
    platin_upnp/NptDirectory.o \
    platin_upnp/NptFile.o \
    platin_upnp/NptHttp.o \
    platin_upnp/NptList.o \
    platin_upnp/NptLogging.o \
    platin_upnp/NptMessaging.o \
    platin_upnp/NptNetwork.o \
    platin_upnp/NptQueue.o \
    platin_upnp/NptRingBuffer.o \
    platin_upnp/NptSimpleMessageQueue.o \
    platin_upnp/NptSockets.o \
    platin_upnp/NptStreams.o \
    platin_upnp/NptStrings.o \
    platin_upnp/NptSystem.o \
    platin_upnp/NptThreads.o \
    platin_upnp/NptTime.o \
    platin_upnp/NptUri.o \
    platin_upnp/NptUtils.o \
    platin_upnp/NptXml.o \
    platin_upnp/NptZip.o \
    platin_upnp/Platinum.o \
    platin_upnp/PltAction.o \
    platin_upnp/PltArgument.o \
    platin_upnp/PltCtrlPoint.o \
    platin_upnp/PltCtrlPointTask.o \
    platin_upnp/PltDatagramStream.o \
    platin_upnp/PltDeviceData.o \
    platin_upnp/PltDeviceHost.o \
    platin_upnp/PltDownloader.o \
    platin_upnp/PltEvent.o \
    platin_upnp/PltHttpClientTask.o \
    platin_upnp/PltHttp.o \
    platin_upnp/PltHttpServer.o \
    platin_upnp/PltHttpServerTask.o \
    platin_upnp/PltLeaks.o \
    platin_upnp/PltLog.o \
    platin_upnp/PltMetadataHandler.o \
    platin_upnp/PltRingBufferStream.o \
    platin_upnp/PltService.o \
    platin_upnp/PltSsdp.o \
    platin_upnp/PltStateVariable.o \
    platin_upnp/PltStreamPump.o \
    platin_upnp/PltTaskManager.o \
    platin_upnp/PltThreadTask.o \
    platin_upnp/PltUPnP.o \
    platin_upnp/System/Posix/NptPosixDirectory.o \
    platin_upnp/System/Posix/NptPosixQueue.o \
    platin_upnp/System/Posix/NptPosixSystem.o \
    platin_upnp/System/Posix/NptPosixThreads.o \
    platin_upnp/System/Posix/NptSelectableMessageQueue.o \
    platin_upnp/System/StdC/NptStdcConsole.o \
    platin_upnp/System/StdC/NptStdcDebug.o \
    platin_upnp/System/StdC/NptStdcEnvironment.o \
    platin_upnp/System/StdC/NptStdcFile.o \
    platin_upnp/System/Bsd/NptBsdNetwork.o \
    platin_upnp/System/Bsd/NptBsdSockets.o \
    platin_upnp/Devices/MediaRenderer/PltMediaRenderer.o \
    platin_upnp/Devices/MediaRenderer/PltMediaRendererSCPDs.o \
    platin_upnp/Devices/MediaRenderer/PltMediaController.o \
    platin_upnp/Devices/MediaServer/PltMediaCache.o \
    platin_upnp/Devices/MediaServer/PltMediaPlaylist.o \
    platin_upnp/Devices/MediaServer/PltMediaBrowser.o \
    platin_upnp/Devices/MediaServer/PltDidl.o \
    platin_upnp/Devices/MediaServer/PltMediaServer.o \
    platin_upnp/Devices/MediaServer/PltSyncMediaBrowser.o \
    platin_upnp/Devices/MediaServer/PltMediaItem.o \
    platin_upnp/Devices/MediaServer/PltMediaServerSCPDs.o \
    platin_upnp/Devices/MediaServer/PltFileMediaServer.o \
    platin_upnp/Devices/MediaConnect/PltMediaConnect.o \
    platin_upnp/Devices/MediaConnect/PltMediaConnectSCPDs.o

ifdef DEBUG
        DEFINES += -DDEBUG
        CXXFLAGS += -g
else
        CXXFLAGS += -O2
endif

### Implicit rules:
%.o: %.c
	$(CXX) $(CXXFLAGS) -c $(DEFINES) $(INCLUDES) -o $@ $<

%.o: %.cpp
	$(CXX) $(CXXFLAGS) -c $(DEFINES) $(INCLUDES) -o $@ $<

# Dependencies:

MAKEDEP = $(CXX) -MM -MG
DEPFILE = .dependencies
$(DEPFILE): Makefile
	@$(MAKEDEP) $(DEFINES) $(INCLUDES) $(OBJS:%.o=%.cpp) > $@
	@for i in $(PLATIN_UPNP_OBJS:%.o=%.cpp) ; do \
		$(MAKEDEP) $(DEFINES) $(INCLUDES) -MT "`dirname $$i`/`basename $$i .cpp`.o" $$i >>$@ ; \
	done

-include $(DEPFILE)

### Targets:

all: libvdr-$(PLUGIN).so

libvdr-$(PLUGIN).so: $(OBJS) $(PLATIN_UPNP_OBJS)
	$(CXX) $(CXXFLAGS) -shared $(OBJS) $(PLATIN_UPNP_OBJS) -o $@
	@cp --remove-destination $@ $(LIBDIR)/$@.$(APIVERSION)

dist: clean
	@-rm -rf $(TMPDIR)/$(ARCHIVE)
	@mkdir $(TMPDIR)/$(ARCHIVE)
	@cp -a * $(TMPDIR)/$(ARCHIVE)
	@tar czf $(PACKAGE).tgz -C $(TMPDIR) $(ARCHIVE)
	@-rm -rf $(TMPDIR)/$(ARCHIVE)
	@echo Distribution package created as $(PACKAGE).tgz

clean:
	@-rm -f $(OBJS) $(PLATIN_UPNP_OBJS) $(DEPFILE) *.so *.tgz core* *~
